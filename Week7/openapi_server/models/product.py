from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Product(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, price=None, description=None, created_at=None):  # noqa: E501
        """Product - a model defined in OpenAPI

        :param id: The id of this Product.  # noqa: E501
        :type id: str
        :param name: The name of this Product.  # noqa: E501
        :type name: str
        :param price: The price of this Product.  # noqa: E501
        :type price: float
        :param description: The description of this Product.  # noqa: E501
        :type description: str
        :param created_at: The created_at of this Product.  # noqa: E501
        :type created_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'price': float,
            'description': str,
            'created_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'price': 'price',
            'description': 'description',
            'created_at': 'createdAt'
        }

        self._id = id
        self._name = name
        self._price = price
        self._description = description
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'Product':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Product of this Product.  # noqa: E501
        :rtype: Product
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Product.

        ID duy nhất của sản phẩm (từ MongoDB)  # noqa: E501

        :return: The id of this Product.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Product.

        ID duy nhất của sản phẩm (từ MongoDB)  # noqa: E501

        :param id: The id of this Product.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Product.


        :return: The name of this Product.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Product.


        :param name: The name of this Product.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def price(self) -> float:
        """Gets the price of this Product.


        :return: The price of this Product.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this Product.


        :param price: The price of this Product.
        :type price: float
        """
        if price is None:
            raise ValueError("Invalid value for `price`, must not be `None`")  # noqa: E501

        self._price = price

    @property
    def description(self) -> str:
        """Gets the description of this Product.


        :return: The description of this Product.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Product.


        :param description: The description of this Product.
        :type description: str
        """

        self._description = description

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this Product.

        Thời gian sản phẩm được tạo  # noqa: E501

        :return: The created_at of this Product.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this Product.

        Thời gian sản phẩm được tạo  # noqa: E501

        :param created_at: The created_at of this Product.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")  # noqa: E501

        self._created_at = created_at
